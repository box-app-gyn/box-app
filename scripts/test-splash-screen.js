#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

console.log('üé¨ TESTE DO SPLASH SCREEN - CERRAD√ò');
console.log('=====================================\n');

// 1. Verificar se o arquivo de v√≠deo existe
console.log('1Ô∏è‚É£ Verificando arquivo de v√≠deo...');
const videoPath = path.join(process.cwd(), 'public', 'videos', 'intro.mp4');
if (fs.existsSync(videoPath)) {
  const stats = fs.statSync(videoPath);
  const sizeMB = (stats.size / (1024 * 1024)).toFixed(2);
  console.log(`‚úÖ V√≠deo encontrado: intro.mp4 (${sizeMB} MB)`);
} else {
  console.log('‚ùå V√≠deo n√£o encontrado: intro.mp4');
}

// 2. Verificar se o componente VideoSplashScreen existe
console.log('\n2Ô∏è‚É£ Verificando componente VideoSplashScreen...');
const componentPath = path.join(process.cwd(), 'components', 'VideoSplashScreen.tsx');
if (fs.existsSync(componentPath)) {
  console.log('‚úÖ Componente VideoSplashScreen.tsx encontrado');
  
  // Verificar se tem as funcionalidades essenciais
  const componentContent = fs.readFileSync(componentPath, 'utf8');
  const checks = [
    { name: 'Loading spinner', pattern: 'animate-spin' },
    { name: 'Logo overlay', pattern: 'logo_circulo.png' },
    { name: 'Bot√£o pular', pattern: 'Pular' },
    { name: 'Barra de progresso', pattern: 'Progress Bar' },
    { name: 'Fallback', pattern: 'videoError' },
    { name: 'AutoPlay', pattern: 'autoPlay' },
    { name: 'PlaysInline', pattern: 'playsInline' },
    { name: 'Muted', pattern: 'muted' }
  ];
  
  checks.forEach(check => {
    if (componentContent.includes(check.pattern)) {
      console.log(`   ‚úÖ ${check.name}`);
    } else {
      console.log(`   ‚ùå ${check.name}`);
    }
  });
} else {
  console.log('‚ùå Componente VideoSplashScreen.tsx n√£o encontrado');
}

// 3. Verificar se o logo existe
console.log('\n3Ô∏è‚É£ Verificando logo...');
const logoPath = path.join(process.cwd(), 'public', 'logos', 'logo_circulo.png');
if (fs.existsSync(logoPath)) {
  console.log('‚úÖ Logo encontrado: logo_circulo.png');
} else {
  console.log('‚ùå Logo n√£o encontrado: logo_circulo.png');
}

// 4. Verificar se o servidor est√° rodando
console.log('\n4Ô∏è‚É£ Verificando servidor...');
const http = require('http');
const options = {
  hostname: 'localhost',
  port: 3000,
  path: '/',
  method: 'GET',
  timeout: 5000
};

const req = http.request(options, (res) => {
  if (res.statusCode === 200) {
    console.log('‚úÖ Servidor rodando em http://localhost:3000');
  } else {
    console.log(`‚ùå Servidor retornou status: ${res.statusCode}`);
  }
});

req.on('error', (err) => {
  console.log('‚ùå Servidor n√£o est√° rodando');
});

req.on('timeout', () => {
  console.log('‚ùå Timeout ao conectar com servidor');
  req.destroy();
});

req.end();

// 5. Informa√ß√µes de teste
console.log('\n5Ô∏è‚É£ Informa√ß√µes para teste:');
console.log('üì± URL Mobile: http://192.168.1.101:3000');
console.log('üíª URL Desktop: http://localhost:3000');

console.log('\nüìã CHECKLIST PARA TESTE MANUAL:');
console.log('==============================');
console.log('‚ñ° V√≠deo carrega automaticamente');
console.log('‚ñ° Loading spinner aparece durante carregamento');
console.log('‚ñ° Logo overlay aparece no canto superior esquerdo');
console.log('‚ñ° Bot√£o "Pular" funciona');
console.log('‚ñ° Barra de progresso animada');
console.log('‚ñ° Fallback funciona se v√≠deo falhar');
console.log('‚ñ° Anima√ß√µes suaves');
console.log('‚ñ° App abre em modo standalone');

console.log('\nüö® PROBLEMAS COMUNS:');
console.log('===================');
console.log('‚Ä¢ V√≠deo n√£o carrega: Verificar formato e tamanho');
console.log('‚Ä¢ Loop infinito: Verificar meta tags viewport');
console.log('‚Ä¢ N√£o acessa mobile: Verificar IP e rede Wi-Fi');
console.log('‚Ä¢ PWA n√£o instala: Usar HTTPS (ngrok)');

console.log('\nüéØ PR√ìXIMOS PASSOS:');
console.log('==================');
console.log('1. Acesse http://192.168.1.101:3000/test-splash no Safari mobile');
console.log('2. Teste cada item do checklist acima');
console.log('3. Se houver problemas, execute: npm run dev:mobile:https');
console.log('4. Para debug: npm run check:pwa');
console.log('5. URL de teste: http://192.168.1.101:3000/test-splash');

console.log('\n‚ú® Teste conclu√≠do!'); 