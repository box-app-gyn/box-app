const admin = require('firebase-admin');

// Inicializar Firebase Admin
const serviceAccount = require('./firebase-admin-key.json');
admin.initializeApp({
  credential: admin.credential.cert(serviceAccount)
});

const db = admin.firestore();

async function checkUsers() {
  try {
    console.log('üîç Verificando documentos dos usu√°rios...\n');
    
    const usersSnapshot = await db.collection('users').get();
    
    if (usersSnapshot.empty) {
      console.log('‚ùå Nenhum usu√°rio encontrado na cole√ß√£o "users"');
      return;
    }
    
    console.log(`‚úÖ Encontrados ${usersSnapshot.size} usu√°rio(s)\n`);
    
    usersSnapshot.forEach((doc) => {
      const userData = doc.data();
      console.log(`üë§ Usu√°rio: ${userData.displayName || 'Sem nome'} (${userData.email})`);
      console.log(`   UID: ${userData.uid}`);
      console.log(`   Role: ${userData.role}`);
      console.log(`   Ativo: ${userData.isActive}`);
      console.log(`   Cidade: ${userData.cidade || 'N√£o informada'}`);
      console.log(`   Box: ${userData.box || 'N√£o informado'}`);
      console.log(`   WhatsApp: ${userData.whatsapp || 'N√£o informado'}`);
      
      // Verificar gamifica√ß√£o
      if (userData.gamification) {
        console.log(`   üéØ Gamifica√ß√£o:`);
        console.log(`      Pontos: ${userData.gamification.points}`);
        console.log(`      N√≠vel: ${userData.gamification.level}`);
        console.log(`      Conquistas: ${userData.gamification.achievements?.length || 0}`);
        console.log(`      C√≥digo de Refer√™ncia: ${userData.gamification.referralCode}`);
      } else {
        console.log(`   ‚ùå Gamifica√ß√£o n√£o encontrada`);
      }
      
      console.log('   ---');
    });
    
  } catch (error) {
    console.error('‚ùå Erro ao verificar usu√°rios:', error);
  }
}

checkUsers().then(() => {
  console.log('\n‚úÖ Verifica√ß√£o conclu√≠da!');
  process.exit(0);
}); 